openapi: 3.0.3
info:
    title: null
    description: ''
    version: 1.0.0
servers:
    -
        url: 'https://job.cijworld.com'
paths:
    /api/v1/auth/register-check:
        post:
            summary: 'Check email|phone token'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Do nothing'
                                properties:
                                    message: { type: string, example: 'Do nothing' }
            tags:
                - Auth
            security: []
    /api/v1/auth/register-token:
        post:
            summary: 'Resend register email|phone token'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token send'
                                properties:
                                    message: { type: string, example: 'Token send' }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: cvandervort@example.org
                            required:
                                - email
            security: []
    /api/v1/auth/login:
        post:
            summary: 'Login user'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'You cannot sign with those credentials'
                                    errors: Unauthorised
                                properties:
                                    message: { type: string, example: 'You cannot sign with those credentials' }
                                    errors: { type: string, example: Unauthorised }
            tags:
                - Auth
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'User email.'
                                    example: user@dev.dev
                                password:
                                    type: string
                                    description: 'User password.'
                                    example: '********'
                                remember_me:
                                    type: boolean
                                    description: 'Remember user to month.'
                                    example: false
                                verification_token:
                                    type: string
                                    description: 'Do nothing.'
                                    example: eos
            security: []
    /api/v1/auth/login-token:
        post:
            summary: 'Check login email|phone token'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'User not found'
                                properties:
                                    message: { type: string, example: 'User not found' }
            tags:
                - Auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: ruecker.kay@example.org
                            required:
                                - email
            security: []
    /api/v1/auth/logout:
        post:
            summary: 'Logout user'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'You are successfully logged out'
                                properties:
                                    message: { type: string, example: 'You are successfully logged out' }
            tags:
                - Auth
    /api/v1/location/countries:
        get:
            summary: 'Get country list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, title: 'Test country' }, { id: 2, title: 'Test country 2' }]
                                properties:
                                    data: { type: array, example: [{ id: 1, title: 'Test country' }, { id: 2, title: 'Test country 2' }], items: { type: object } }
            tags:
                - Location
            security: []
    /api/v1/location/regions:
        get:
            summary: 'Get region list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { country_id: ['The selected country id is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { country_id: ['The selected country id is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Location
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                country_id:
                                    type: string
                                    description: ''
                                    example: sunt
                            required:
                                - country_id
            security: []
    /api/v1/location/cities:
        get:
            summary: 'Get city list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { country_id: ['The selected country id is invalid.'], region_id: ['The selected region id is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { country_id: ['The selected country id is invalid.'], region_id: ['The selected region id is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Location
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                country_id:
                                    type: string
                                    description: ''
                                    example: sint
                                region_id:
                                    type: string
                                    description: ''
                                    example: cum
                            required:
                                - country_id
                                - region_id
            security: []
    /api/v1/order/order:
        get:
            summary: 'Get list orders'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Whoops, looks like something went wrong'
                                    status: 500
                                properties:
                                    message: { type: string, example: 'Whoops, looks like something went wrong' }
                                    status: { type: integer, example: 500 }
            tags:
                - Order
            security: []
        post:
            summary: 'Create new order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { type: ['The type field is required.'], title: ['The title field is required.'], description: ['The description field is required.'], service_provision: ['The service provision field is required.'], price: ['The price field is required.'], desired_date: ['The desired date field is required.'], desired_time_from: ['The desired time from field is required.'], desired_time_to: ['The desired time to field is required.'], currency: ['The currency field is required.'], country: ['The country field is required.'], region: ['The region field is required.'], city: ['The city field is required.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { type: ['The type field is required.'], title: ['The title field is required.'], description: ['The description field is required.'], service_provision: ['The service provision field is required.'], price: ['The price field is required.'], desired_date: ['The desired date field is required.'], desired_time_from: ['The desired time from field is required.'], desired_time_to: ['The desired time to field is required.'], currency: ['The currency field is required.'], country: ['The country field is required.'], region: ['The region field is required.'], city: ['The city field is required.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'The value must be one of <code>request</code> or <code>service</code>.'
                                    example: request
                                title:
                                    type: string
                                    description: ''
                                    example: eos
                                description:
                                    type: string
                                    description: ''
                                    example: sed
                                service_provision:
                                    type: string
                                    description: 'The value must be one of <code>online</code> or <code>offline</code>.'
                                    example: offline
                                price:
                                    type: number
                                    description: ''
                                    example: 1137028.39716
                                desired_date:
                                    type: string
                                    description: 'The value must be a valid date in the format Y-m-d.'
                                    example: '2020-10-04'
                                desired_time_from:
                                    type: string
                                    description: 'The value must be a valid date in the format H:i:s.'
                                    example: '12:39:58'
                                desired_time_to:
                                    type: string
                                    description: 'The value must be a valid date in the format H:i:s.'
                                    example: '12:39:58'
                                execution_address:
                                    type: string
                                    description: ''
                                    example: {  }
                                address:
                                    type: string
                                    description: ''
                                    example: {  }
                                currency:
                                    type: string
                                    description: ''
                                    example: totam
                                country:
                                    type: string
                                    description: ''
                                    example: sit
                                region:
                                    type: string
                                    description: ''
                                    example: ullam
                                city:
                                    type: string
                                    description: ''
                                    example: voluptates
                                'images.*':
                                    type: string
                                    format: binary
                                    description: 'The value must be an image.'
                                'categories.*':
                                    type: string
                                    description: ''
                                    example: earum
                            required:
                                - type
                                - title
                                - description
                                - service_provision
                                - price
                                - desired_date
                                - desired_time_from
                                - desired_time_to
                                - currency
                                - country
                                - region
                                - city
                                - 'categories.*'
    '/api/v1/order/order/{order}':
        get:
            summary: 'Show order'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                    status: 404
                                properties:
                                    message: { type: string, example: 'Not Found' }
                                    status: { type: integer, example: 404 }
            tags:
                - Order
            security: []
        put:
            summary: 'Update order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                    status: 404
                                properties:
                                    message: { type: string, example: 'Not Found' }
                                    status: { type: integer, example: 404 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                type:
                                    type: string
                                    description: 'The value must be one of <code>request</code> or <code>service</code>.'
                                    example: service
                                title:
                                    type: string
                                    description: ''
                                    example: reprehenderit
                                description:
                                    type: string
                                    description: ''
                                    example: culpa
                                service_provision:
                                    type: string
                                    description: 'The value must be one of <code>online</code> or <code>offline</code>.'
                                    example: online
                                price:
                                    type: number
                                    description: ''
                                    example: 8.345
                                desired_date:
                                    type: string
                                    description: 'The value must be a valid date in the format Y-m-d.'
                                    example: '2020-10-04'
                                desired_time_from:
                                    type: string
                                    description: 'The value must be a valid date in the format H:i:s.'
                                    example: '12:39:58'
                                desired_time_to:
                                    type: string
                                    description: 'The value must be a valid date in the format H:i:s.'
                                    example: '12:39:58'
                                execution_address:
                                    type: string
                                    description: ''
                                    example: {  }
                                address:
                                    type: string
                                    description: ''
                                    example: {  }
                                currency:
                                    type: string
                                    description: ''
                                    example: quo
                                country:
                                    type: string
                                    description: ''
                                    example: aperiam
                                region:
                                    type: string
                                    description: ''
                                    example: incidunt
                                city:
                                    type: string
                                    description: ''
                                    example: sit
                                'images.*':
                                    type: string
                                    format: binary
                                    description: 'The value must be an image.'
                                'categories.*':
                                    type: string
                                    description: ''
                                    example: atque
                            required:
                                - type
                                - title
                                - description
                                - service_provision
                                - price
                                - desired_date
                                - desired_time_from
                                - desired_time_to
                                - currency
                                - country
                                - region
                                - city
                                - 'categories.*'
        delete:
            summary: 'Delete order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                    status: 404
                                properties:
                                    message: { type: string, example: 'Not Found' }
                                    status: { type: integer, example: 404 }
            tags:
                - Order
    /api/v1/order/order/add-executor:
        post:
            summary: 'Add executor to order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { order: ['The selected order is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { order: ['The selected order is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order:
                                    type: integer
                                    description: ''
                                    example: 18
                            required:
                                - order
    /api/v1/order/order/remove-executor:
        post:
            summary: 'Remove executor from order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { order: ['The selected order is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { order: ['The selected order is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order:
                                    type: integer
                                    description: ''
                                    example: 15
                            required:
                                - order
    /api/v1/order/order/select-executor:
        post:
            summary: 'Select executor to order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { order: ['The selected order is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { order: ['The selected order is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order:
                                    type: integer
                                    description: ''
                                    example: 18
                            required:
                                - order
    /api/v1/order/order/add-view:
        post:
            summary: 'Add viewer to order'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                422:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'The given data was invalid.'
                                    errors: { order: ['The selected order is invalid.'] }
                                    status: 422
                                properties:
                                    message: { type: string, example: 'The given data was invalid.' }
                                    errors: { type: object, example: { order: ['The selected order is invalid.'] } }
                                    status: { type: integer, example: 422 }
            tags:
                - Order
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                order:
                                    type: integer
                                    description: ''
                                    example: 10
                            required:
                                - order
    /api/v1/order/currency:
        get:
            summary: 'Currency list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, title: UAH }]
                                properties:
                                    data: { type: array, example: [{ id: 1, title: UAH }], items: { type: object } }
            tags:
                - Order
            security: []
    /api/v1/order/category:
        get:
            summary: 'Get category list'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, title: 'Тест en', children: { data: [{ id: 2, title: 'Test 1' }, { id: 3, title: 'Test 2' }] } }]
                                properties:
                                    data: { type: array, example: [{ id: 1, title: 'Тест en', children: { data: [{ id: 2, title: 'Test 1' }, { id: 3, title: 'Test 2' }] } }], items: { type: object } }
            tags:
                - Order
            security: []
    /api/v1/user/profile:
        get:
            summary: 'Get current user profile'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Whoops, looks like something went wrong'
                                    status: 500
                                properties:
                                    message: { type: string, example: 'Whoops, looks like something went wrong' }
                                    status: { type: integer, example: 500 }
            tags:
                - User
        post:
            summary: 'Update current user profile'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Whoops, looks like something went wrong'
                                    status: 500
                                properties:
                                    message: { type: string, example: 'Whoops, looks like something went wrong' }
                                    status: { type: integer, example: 500 }
            tags:
                - User
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: ''
                                    example: et
                                last_name:
                                    type: string
                                    description: ''
                                    example: incidunt
                                patronymic:
                                    type: string
                                    description: ''
                                    example: illum
                                description:
                                    type: string
                                    description: ''
                                    example: et
                                gender:
                                    type: string
                                    description: 'The value must be one of <code>1</code> or <code>2</code>.'
                                    example: '1'
                                photo:
                                    type: string
                                    format: binary
                                    description: 'The value must be an image.'
                                date_of_birth:
                                    type: string
                                    description: 'The value must be a valid date in the format Y-m-d.'
                                    example: '2020-10-04'
                                company_type:
                                    type: string
                                    description: 'The value must be one of <code>personal</code> or <code>company</code>.'
                                    example: personal
                                company_name:
                                    type: string
                                    description: ''
                                    example: nobis
                                company_site:
                                    type: string
                                    description: 'The value must be a valid URL.'
                                    example: 'http://www.bogisich.com/blanditiis-aut-vitae-officia-omnis-ut-ea-vitae-exercitationem.html'
                                country:
                                    type: string
                                    description: ''
                                    example: labore
                                region:
                                    type: string
                                    description: ''
                                    example: quo
                                city:
                                    type: string
                                    description: ''
                                    example: deserunt
                            required:
                                - name
                                - last_name
                                - patronymic
                                - description
                                - gender
                                - date_of_birth
                                - company_type
                                - country
                                - region
                                - city
    '/api/v1/user/profile/{user}':
        get:
            summary: 'Get user profile'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                    status: 404
                                properties:
                                    message: { type: string, example: 'Not Found' }
                                    status: { type: integer, example: 404 }
            tags:
                - User
            security: []
components:
    securitySchemes:
        default:
            type: http
            scheme: bearer
            description: ''
security:
    -
        default: []
